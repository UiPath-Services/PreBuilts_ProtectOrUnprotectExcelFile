<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uia="clr-namespace:UiPath.IPC.Activities;assembly=UiPath.IPC.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_dict_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2598,8653</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="39">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IPC.Activities</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.WPFInteractive.Activities</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.Office.Core</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.WPFInteractive.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Callout.Activity</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IPC.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="This workflow contains the logic of the button's process." DisplayName="Process" sap:VirtualizedContainerService.HintSize="948,8588" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:Exception" Name="errorFound" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_statusReport" />
      <Variable x:TypeArguments="scg:ICollection(x:String)" Default="[new list (of string)]" Name="list_excelFilePaths" />
      <Variable x:TypeArguments="njl:JArray" Name="jArr_resultsGrid" />
      <Variable x:TypeArguments="x:String" Name="str_outputFilepath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="886,101" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Process started&quot;]" />
    <uia:BroadcastMessage ContinueOnError="{x:Null}" Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="886,142" sap2010:WorkflowViewState.IdRef="BroadcastMessage_1" Message="Process running" PollingInterval="10" Timeout="0" />
    <Assign sap2010:Annotation.AnnotationText="Use resultFormMessage to build the message that will appear in the Result Form after a successful transaction." sap:VirtualizedContainerService.HintSize="886,127" sap2010:WorkflowViewState.IdRef="Assign_39">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["Your automation has finished!"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <If Condition="[Not io_dict_Config(&quot;str_Password&quot;).ToString.Equals(io_dict_Config(&quot;str_ConfirmPassword&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="886,533" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="400,336" sap2010:WorkflowViewState.IdRef="Sequence_45">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <uia:BroadcastMessage ContinueOnError="{x:Null}" Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="338,142" sap2010:WorkflowViewState.IdRef="BroadcastMessage_24" Message="[&quot;Passwords did not match,&quot; + vbNewLine + &quot;please try again.&quot;]" PollingInterval="10" Timeout="0" />
          <Throw Exception="[new BusinessRuleException(io_dict_Config(&quot;passwordMismatch&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Throw>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_44">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[io_dict_Config(&quot;str_filetype&quot;).ToString]" sap:VirtualizedContainerService.HintSize="886,664" sap2010:WorkflowViewState.IdRef="Switch`1_4">
      <AddToCollection x:TypeArguments="x:String" x:Key="file" Collection="[list_excelFilePaths]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,32" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[io_dict_Config(&quot;str_FilePath&quot;).ToString]" />
      <If x:Key="folder" Condition="[Convert.ToBoolean(io_dict_Config(&quot;includeSubfolders&quot;))]" sap:VirtualizedContainerService.HintSize="569,238" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <Assign sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_47">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:ICollection(x:String)">[list_excelFilePaths]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:ICollection(x:String)">[Directory.GetFiles(io_dict_Config("str_FolderPath").ToString,"*.xls*",searchOption.AllDirectories).ToList]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_48">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:ICollection(x:String)">[list_excelFilePaths]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:ICollection(x:String)">[Directory.GetFiles(io_dict_Config("str_FolderPath").ToString,"*.xls*").ToList]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
    </Switch>
    <If Condition="[list_excelFilePaths.Count = 0]" sap:VirtualizedContainerService.HintSize="886,257" sap2010:WorkflowViewState.IdRef="If_10">
      <If.Then>
        <Throw Exception="[new BusinessRuleException(io_dict_Config(&quot;noExcelFiles&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="200,32" sap2010:WorkflowViewState.IdRef="Throw_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Throw>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_48">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <Sequence DisplayName="Protect/Unprotect workbooks" sap:VirtualizedContainerService.HintSize="886,6081" sap2010:WorkflowViewState.IdRef="Sequence_54">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:BuildDataTable DataTable="[dt_statusReport]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="824,69" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Filename&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="824,5527" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[list_excelFilePaths]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="file" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="788,5393" sap2010:WorkflowViewState.IdRef="Sequence_58">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="726,5271" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                <TryCatch.Try>
                  <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[io_dict_Config(&quot;str_ChooseAction&quot;).ToString]" sap:VirtualizedContainerService.HintSize="688,4003" sap2010:WorkflowViewState.IdRef="Switch`1_7">
                    <Sequence x:Key="Protect" sap:VirtualizedContainerService.HintSize="496,1235" sap2010:WorkflowViewState.IdRef="Sequence_55">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,70" sap2010:WorkflowViewState.IdRef="Assign_50">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_outputFilepath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[io_dict_Config("outputFolderPath").ToString + "\" + path.GetFileNameWithoutExtension(file) + " - Protected" + path.GetExtension(file)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[str_outputFilepath]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,167" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[file]" />
                      <uia:BroadcastMessage ContinueOnError="{x:Null}" Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="434,142" sap2010:WorkflowViewState.IdRef="BroadcastMessage_27" Message="[&quot;Protecting &quot;+ path.GetFileNameWithoutExtension(file)]" PollingInterval="10" Timeout="0" />
                      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Check to see if workbook is already protected." AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,165" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[str_outputFilepath]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ExcelApplicationScope>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xD;&#xA;{&#xD;&#xA;&#x9;Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;var wb = app.Workbooks.Open(in_FilePath,3,false,5);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;wb.Password = in_Password;&#xD;&#xA;&#x9;wb.Save();&#xD;&#xA;&#x9;wb.Close();&#xD;&#xA;&#x9;&#xD;&#xA;}&#xD;&#xA;catch(Exception e)&#xD;&#xA;{&#xD;&#xA;&#x9;out_Exception = e;&#xD;&#xA;&#x9;Console.WriteLine(e.Message.ToString()+&quot; &quot;+e.Source.ToString());&#xD;&#xA;}&#xD;&#xA;" DisplayName="Invoke code - Protect " sap:VirtualizedContainerService.HintSize="434,174" sap2010:WorkflowViewState.IdRef="InvokeCode_15" Language="CSharp">
                        <ui:InvokeCode.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_outputFilepath" />
                          </InArgument>
                          <OutArgument x:TypeArguments="s:Exception" x:Key="out_Exception">
                            <mva:VisualBasicReference x:TypeArguments="s:Exception" ExpressionText="errorFound" />
                          </OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Password">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="io_dict_Config(&quot;str_Password&quot;).ToString" />
                          </InArgument>
                        </ui:InvokeCode.Arguments>
                      </ui:InvokeCode>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{path.GetFileNameWithoutExtension(file),&quot;Successfully password-protected&quot;}]" DataTable="[dt_statusReport]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="434,195" sap2010:WorkflowViewState.IdRef="AddDataRow_27" />
                    </Sequence>
                    <Sequence x:Key="Unprotect" sap:VirtualizedContainerService.HintSize="648,2402" sap2010:WorkflowViewState.IdRef="Sequence_57">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="586,70" sap2010:WorkflowViewState.IdRef="Assign_51">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_outputFilepath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[io_dict_Config("outputFolderPath").ToString + "\" + path.GetFileNameWithoutExtension(file) + " - Unprotected" + path.GetExtension(file)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[str_outputFilepath]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="586,167" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="True" Path="[file]" />
                      <uia:BroadcastMessage ContinueOnError="{x:Null}" Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="586,142" sap2010:WorkflowViewState.IdRef="BroadcastMessage_28" Message="[&quot;Unprotecting &quot;+path.GetFileNameWithoutExtension(file)]" PollingInterval="10" Timeout="0" />
                      <TryCatch sap2010:Annotation.AnnotationText="Try to open file without password to see if it's already unprotected. If so, don't try to unprotect. If file can't be opened, continue with trying to unprotect with provided password." DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="586,1781" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence sap:VirtualizedContainerService.HintSize="496,522" sap2010:WorkflowViewState.IdRef="Sequence_60">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Check to see if workbook is already unprotected." AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,165" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[str_outputFilepath]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{path.GetFileNameWithoutExtension(file),&quot;File already unprotected&quot;}]" DataTable="[dt_statusReport]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="434,195" sap2010:WorkflowViewState.IdRef="AddDataRow_29" />
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="552,897" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="546,828" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;&#x9;Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();&#xA;&#x9;&#xA;&#x9;var wb = app.Workbooks.Open(in_FilePath,3,false,5,in_Password);&#xA;&#x9;&#xA;&#x9;wb.Password = &quot;&quot;;&#xA;&#x9;wb.Save();&#xA;&#x9;wb.Close();&#xA;&#x9;&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;out_Exception = e;&#xA;&#x9;Console.WriteLine(e.Message.ToString()+&quot; &quot;+e.Source.ToString());&#xA;}&#xA;" DisplayName="Invoke code - Unprotect " sap:VirtualizedContainerService.HintSize="484,174" sap2010:WorkflowViewState.IdRef="InvokeCode_16" Language="CSharp">
                                  <ui:InvokeCode.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_outputFilepath" />
                                    </InArgument>
                                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_Exception">
                                      <mva:VisualBasicReference x:TypeArguments="s:Exception" ExpressionText="errorFound" />
                                    </OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Password">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="io_dict_Config(&quot;str_Password&quot;).ToString" />
                                    </InArgument>
                                  </ui:InvokeCode.Arguments>
                                </ui:InvokeCode>
                                <If Condition="[errorFound isnot Nothing]" sap:VirtualizedContainerService.HintSize="484,257" sap2010:WorkflowViewState.IdRef="If_12">
                                  <If.Then>
                                    <Throw Exception="[New BusinessRuleException(io_dict_Config(&quot;invalidPassword&quot;).tostring)]" sap:VirtualizedContainerService.HintSize="200,32" sap2010:WorkflowViewState.IdRef="Throw_8" />
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_56">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{path.GetFileNameWithoutExtension(file),&quot;Successfully removed password&quot;}]" DataTable="[dt_statusReport]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="484,195" sap2010:WorkflowViewState.IdRef="AddDataRow_28" />
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </Switch>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="692,948" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="559,879" sap2010:WorkflowViewState.IdRef="Sequence_59">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="497,89" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[str_outputFilepath]" />
                        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[exception.Message]" sap:VirtualizedContainerService.HintSize="497,628" sap2010:WorkflowViewState.IdRef="Switch`1_6">
                          <Switch.Default>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{path.GetFileNameWithoutExtension(file),&quot;Couldn't access, please check file&quot;}]" DataTable="[dt_statusReport]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="334,195" sap2010:WorkflowViewState.IdRef="AddDataRow_26" />
                          </Switch.Default>
                          <ui:AddDataRow DataRow="{x:Null}" x:Key="The password to unprotect the workbook was invalid." ArrayRow="[{path.GetFileNameWithoutExtension(file),&quot;Invalid password provided&quot;}]" DataTable="[dt_statusReport]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="334,195" sap2010:WorkflowViewState.IdRef="AddDataRow_25" />
                        </Switch>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="824,101" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Finished protecting/unprotecting workbooks&quot;]" />
      <uia:BroadcastMessage ContinueOnError="{x:Null}" Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="824,142" sap2010:WorkflowViewState.IdRef="BroadcastMessage_29" Message="Finished process" PollingInterval="10" Timeout="0" />
    </Sequence>
    <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="886,69" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_2" JsonArray="[jArr_resultsGrid]" JsonString="[JsonConvert.SerializeObject(dt_statusReport)]" />
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="886,141" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultsGrid")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Object">[jArr_resultsGrid]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Object">[io_dict_Config("showViewOutput")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Object">[True]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
  </Sequence>
</Activity>